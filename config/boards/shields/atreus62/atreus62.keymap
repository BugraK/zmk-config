#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../../zmk-nodefree-config/helper.h"
#include "../../zmk-nodefree-config/keypos_def/keypos_62keys.h"

#define DEFAULT 0
#define PISI 1
#define SETUP 2
#define SYMBOL 3
#define FUNCTION 4
#define NAVIGATION 5

/* Special keycodes */
#define XXX &none
#define ___ &trans
#define HYPER LG(LS(LA(LCTRL)))

// Symbols
#define SA_1 LS(LA(N1))
#define SA_2 LS(LA(N2))
#define SA_3 LS(LA(N3))
#define SA_4 LS(LA(N4))
#define SA_5 LS(LA(N5))
#define SA_6 LS(LA(N6))
#define SA_7 LS(LA(N7))
#define SA_8 LS(LA(N8))
#define SA_9 LS(LA(N9))
#define SA_0 LS(LA(N0))

/* Global settings */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <600>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 LF0 LF1 LF2 LF3 LF4 LF5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 RF0 RF1 RF2 RF3 RF4 RF5  // right hand
#define THUMBS LH0 LH1 LH2 LH3 LH4 LH5 RH0 RH1 RH2 RH3 RH4 RH5                                                  // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        global-quick-tap-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

MAKE_HRM(hml_repeat, &kp, &key_repeat, KEYS_R THUMBS)  // used for HRM-combo
//MAKE_HRM(hmr_lpar_lt, &kp, &lpar_lt, KEYS_L THUMBS)    // "    "   "   "
//MAKE_HRM(hmr_rpar_gt, &kp, &rpar_gt, KEYS_L THUMBS)    // "    "   "   "

/* Caps-word, num-word and smart-mouse */

// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_BEHAVIOR(smart_shft, mod_morph,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
&caps_word {  // mods deactivate caps-word, requires PR #1441
    /delete-property/ ignore-modifiers;
};

/* Custom behaviors */

// Alt+Tab swapper, requires PR #1366
ZMK_BEHAVIOR(swap_N, tri_state,
    bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
    ignored-key-positions = <LH1>;
)

ZMK_BEHAVIOR(swap_P, tri_state,
    bindings = <&kt LGUI>, <&kp LS(TAB)>, <&kt LGUI>;
    //ignored-key-positions = <LT2>;
)

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |   1   |  2  |  3  |  4   |  5   |  6   |                   |  7   |  8    |  9    |  0   |   X   |   Q   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   ;   |
// |H & ESC|  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |  N   |  M    |  B    |  .   |   ,   |   >   |
// | LCTL  | LGUI  | LALT |  GRAV |  | EQL  | DEL | BKSP| | RET | SPC  | LBKT |  RBKT  | LBKT | HOME  |  MO 1 |

            bindings = <
&kp N1        &kp N2       &kp N3      &kp N4      &kp N5       &kp N6             &kp N7 &kp N8       &kp N9      &kp N0      &kp MINUS       &kp EQUAL
&kp TAB       &kp Q        &kp W       &kp E       &kp R        &kp T              &kp Y  &kp U        &kp I       &kp O       &kp P           &kp LBKT
&mt HYPER ESC &hml LCTRL A &hml LALT S &hml LGUI D &hml LSHFT F &kp G              &kp H  &hmr RSHFT J &hmr RGUI K &hmr LALT L &hmr LCTRL SEMI &kp SQT
&kp GRAVE     &kp Z        &kp X       &kp C       &kp V        &kp B              &kp N  &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp RET
&sk LCTRL     &kp LGUI     &sk LALT    &sk LGUI    &smart_shft  &lt 4 SPACE        &tog 5 &sk RSHFT    &sk RGUI    &sk RALT    &sk RCTRL       &mo 1
                                                                  &sl 3              &lt 5 BSPC
            >;
            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;

        };
        
        pisi_layer {
// ------------------------------------------------------------------------------------------------------------
// |  F1   |  F2 | F3  | F4   | F5   | F6   |                   |  F7  |  F8   |  F9   | F10  | F11   | F12   |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// | TOG 2 |     |     |      |      |      |       |    |      |      |       |       |      |       |       |

            bindings = <
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6                             &kp F7 &kp F8 &kp F9   &kp F10  &kp F11   &kp F12
&trans &trans &trans &trans &trans &trans                             &trans &trans &trans   &trans   &trans    &trans
&trans &trans &trans &trans &trans &trans                             &trans &trans &trans   &trans   &trans    &trans
&trans &trans &trans &trans &trans &trans                             &trans &trans &trans   &kp UP   &trans    &trans
&tog 2 &trans &trans &trans &trans &trans                             &trans &trans &kp LEFT &kp DOWN &kp RIGHT &trans
                                   &trans                             &trans 
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };


        setup_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLEAR| BT0 | BT1 | BT2  | BT3  | BT4  |                   |      |       |       |      |       | BOOT  |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// | TOG 2 |     |     |      |      |      |       |    |      |      |       |       |      |       |       |

            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4         &trans &trans &trans &trans &trans &bootloader
&trans &trans &trans &trans &trans &trans                                           &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                                           &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                                           &trans &trans &trans &trans &trans &trans
&tog 2 &trans &trans &trans &trans &trans                                           &trans &trans &trans &trans &trans &trans
                                   &trans                                           &trans
            >;
            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        symbol_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |  UP   |      |       |       |
// |       |     |     |      |      |      |                   |      | LEFT  | DOWN  | RIGHT|       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |


            bindings = <
&trans &trans     &trans     &trans     &trans     &trans               &trans     &trans     &trans     &trans     &trans     &trans
&trans &kp SA_1   &kp SA_2   &kp SA_3   &kp SA_4   &kp SA_5             &kp SA_6   &kp SA_7   &kp SA_8   &kp SA_9   &kp SA_0   &trans
&trans &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5)           &kp LS(N6) &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0) &trans
&trans &kp LA(N1) &kp LA(N2) &kp LA(N3) &kp LA(N4) &kp LA(N5)           &kp LA(N6) &kp LA(N7) &kp LA(N8) &kp LA(N9) &kp LA(N0) &trans
&trans &trans     &trans     &trans     &trans     &trans               &trans     &trans     &trans     &trans     &trans     &trans
                                                   &trans               &trans
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        function_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |       |    |  DEL |      |       |       |      |       |       |

            bindings = <
&trans &trans &trans  &trans &trans   &trans                                           &trans &trans &trans &trans &trans &trans
&trans &kp F1 &kp F2  &kp F3  &kp F4  &trans                                           &trans &trans &trans &trans &trans &trans
&trans &kp F5 &kp F6  &kp F7  &kp F8  &trans                                           &trans &trans &trans &trans &trans &trans
&trans &kp F9 &kp F10 &kp F11 &kp F12 &trans                                           &trans &trans &trans &trans &trans &trans
&trans &trans &trans  &trans &trans   &trans                                           &trans &trans &trans &trans &trans &trans
                                      &trans                                           &kp DEL
            >;
            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        navigation_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |  UP   |      |       |       |
// |       |     |     |      |      |      |                   |      | LEFT  | DOWN  | RIGHT|       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |


            bindings = <
&trans &trans &trans &trans          &trans      &trans         &trans  &trans   &trans   &trans    &trans &trans
&trans &trans &trans &kp LC(LS(TAB)) &kp LC(TAB) &trans         &trans  &kp BSPC &kp UP   &trans    &trans &trans
&trans &trans &trans &swap_P         &swap_N     &trans         &kp DEL &kp LEFT &kp DOWN &kp RIGHT &trans &trans
&trans &trans &trans &kp LA(LS(TAB)) &kp LA(TAB) &trans         &trans  &trans   &trans   &trans    &trans &trans
&trans &trans &trans &trans          &trans      &trans         &trans  &trans   &trans   &trans    &trans &trans
                                                 &trans         &trans
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };



//&trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
//&trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
//&trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
//&trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
//&trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
//                                   &trans                             &trans


    };
};
